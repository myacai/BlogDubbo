<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--加载数据库配置文件-->
    <context:property-placeholder location="classpath:mysql.properties" />

    <!--配置数据源 c3p0l连接池-->	
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="testConnectionOnCheckout" value="${jdbc.c3p0.testConnectionOnCheckout}" />
        <property name="testConnectionOnCheckin" value="${jdbc.c3p0.testConnectionOnCheckin}" />
        <property name="idleConnectionTestPeriod" value="${jdbc.c3p0.idleConnectionTestPeriod}" />
        <property name="initialPoolSize" value="${jdbc.c3p0.initialPoolSize}" />
        <property name="minPoolSize" value="${jdbc.c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.c3p0.maxPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.c3p0.maxIdleTime}" />
    </bean>

    <!--配置SqlSessionFactory-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="plugins">
        <array>
          <bean class="com.github.pagehelper.PageHelper">
            <property name="properties">
              <value>
                dialect=mysql
                reasonable=true
              </value>
            </property>
          </bean>
        </array>
      </property>
       
        <!--加载mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis/mybatis.cfg.xml"/>
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
        

       
        
    </bean>


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--如果需要扫描多个报下的mapper,每个包中间使用半角逗号分开-->
        <property name="basePackage" value="com.cai.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sessionFactory" />
    </bean>




    <context:component-scan base-package="com.cai.service.impl"/>










    <!-- 1、指定当前服务/应用的名字（同样的服务名字相同，不要和别的服务同名） -->
    <dubbo:application name="service-provider"></dubbo:application>

    <!-- 2、指定注册中心的位置 -->
    <!-- <dubbo:registry address="zookeeper://127.0.0.1:2181"></dubbo:registry> -->
    <dubbo:registry protocol="zookeeper" address="127.0.0.1:2181"></dubbo:registry>

    <!-- 3、指定通信规则（通信协议？通信端口） -->
    <dubbo:protocol name="dubbo" port="20882"></dubbo:protocol>

    <!-- 4、暴露服务   ref：指向服务的真正的实现对象 -->
    <dubbo:service interface="com.cai.service.BlackIpService"
                   ref="BlackIpService" timeout="1000" version="1.0.0">
    </dubbo:service>

    <dubbo:service interface="com.cai.service.BlogerService"
                   ref="BlogerService" timeout="1000" version="1.0.0">
    </dubbo:service>

    <dubbo:service interface="com.cai.service.BlogService"
                   ref="BlogService" timeout="1000" version="1.0.0">
    </dubbo:service>

    <dubbo:service interface="com.cai.service.BlogTypeService"
                   ref="BlogTypeService" timeout="1000" version="1.0.0">
    </dubbo:service>
    <dubbo:service interface="com.cai.service.CoursevideolistService"
                   ref="CoursevideolistService" timeout="1000" version="1.0.0">
    </dubbo:service>
    <dubbo:service interface="com.cai.service.CoursevideoService"
                   ref="CoursevideoService" timeout="1000" version="1.0.0">
    </dubbo:service>
    <dubbo:service interface="com.cai.service.LinksService"
                   ref="LinksService" timeout="1000" version="1.0.0">
    </dubbo:service>
    <dubbo:service interface="com.cai.service.LogService"
                   ref="LogService" timeout="1000" version="1.0.0">
    </dubbo:service>

    <dubbo:service interface="com.cai.service.ResourceService"
                   ref="ResourceService" timeout="1000" version="1.0.0">
    </dubbo:service>

    <dubbo:service interface="com.cai.service.VisitService"
                   ref="VisitService" timeout="1000" version="1.0.0">
    </dubbo:service>





    <!--统一设置服务提供方的规则  -->
    <dubbo:provider timeout="1000"></dubbo:provider>





    <!-- 连接监控中心 -->
    <dubbo:monitor protocol="registry"></dubbo:monitor>

</beans>